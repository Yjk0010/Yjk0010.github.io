import{_ as e,o,c as a,N as c}from"./chunks/framework.7e203a6d.js";const u=JSON.parse('{"title":"CSS","description":"","frontmatter":{},"headers":[],"relativePath":"css/main.md"}'),i={name:"css/main.md"},l=c('<h1 id="css" tabindex="-1">CSS <a class="header-anchor" href="#css" aria-label="Permalink to &quot;CSS&quot;">​</a></h1><blockquote><p>全称 层叠样式表 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS" target="_blank" rel="noreferrer">MDN</a></p></blockquote><h2 id="css-简介" tabindex="-1">CSS 简介 <a class="header-anchor" href="#css-简介" aria-label="Permalink to &quot;CSS 简介&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">简介</p><p>层叠样式表（Cascading Style Sheets，缩写为 CSS）是一种样式表语言，用来描述 HTML 或 XML（包括如 SVG、MathML 或 XHTML 之类的 XML 分支语言）文档的呈现。CSS 描述了在屏幕、纸质、音频等其他媒体上的元素应该如何被渲染的问题。</p></div><h2 id="常用术语" tabindex="-1">常用术语 <a class="header-anchor" href="#常用术语" aria-label="Permalink to &quot;常用术语&quot;">​</a></h2><ul><li>选择器 <code>Selector</code> : 指定样式应用的 HTML 元素或元素组。</li><li>属性 <code>Property</code> : 指定要设置的样式属性的名称。</li><li>值 <code>Value</code> : 指定要应用到属性的值。</li><li>盒子模型 <code>Box model</code> : 一个 HTML 元素由内容、内边距、边框和外边距四部分组成的矩形框模型。</li><li>盒子尺寸 <code>Box sizing</code> : 盒子模型中宽度和高度的计算方式，包括 content-box 和 border-box 两种方式。</li><li>浮动 <code>Float</code> : 将 HTML 元素从正常文档流中移除并使其向左或向右移动，允许其他元素围绕其周围排列。</li><li>清除浮动 <code>Clear float</code> : 在一个元素中设置样式以强制其下方的元素不受浮动元素的影响。</li><li>层叠 <code>Cascading</code> : 多个样式定义应用于同一元素时，根据优先级和特定规则确定应用哪些样式。</li><li>伪类 <code>Pseudo-class</code> : 应用于选择器的关键词，用于指定在特定状态下选择元素，例如:hover、:active。</li><li>伪元素 <code>Pseudo-element</code> : 应用于选择器的关键词，用于指定要在元素的特定部分上应用样式，例如::before、::after。</li><li>相对定位 <code>Relative positioning</code> : 通过指定相对于其原始位置移动的值来定位元素。</li><li>绝对定位 <code>Absolute positioning</code> : 相对于其包含元素定位元素，如果没有，则相对于文档主体。</li><li>响应式设计 <code>Responsive design</code> : 为不同设备的不同视口宽度提供不同的样式，以确保页面在任何设备上都能正常显示。</li></ul>',6),t=[l];function s(d,r,n,_,h,S){return o(),a("div",null,t)}const m=e(i,[["render",s]]);export{u as __pageData,m as default};

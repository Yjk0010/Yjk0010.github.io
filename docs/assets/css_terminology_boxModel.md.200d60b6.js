import{_ as o,o as e,c as a,N as i}from"./chunks/framework.7e203a6d.js";const t="/assets/box-0.c1ef3ea7.jpg",l="/assets/box-1.ce24a79e.jpg",c="/assets/box-2.d9e6c9a1.jpg",x=JSON.parse('{"title":"盒模型","description":"","frontmatter":{},"headers":[],"relativePath":"css/terminology/boxModel.md"}'),r={name:"css/terminology/boxModel.md"},s=i('<h1 id="盒模型" tabindex="-1">盒模型 <a class="header-anchor" href="#盒模型" aria-label="Permalink to &quot;盒模型&quot;">​</a></h1><blockquote><p>box：盒子, 每个元素在页面中都会生成一个矩形区域（盒子）</p></blockquote><h2 id="盒子类型" tabindex="-1">盒子类型 <a class="header-anchor" href="#盒子类型" aria-label="Permalink to &quot;盒子类型&quot;">​</a></h2><ol><li>行盒: <code>display</code> 等于 <code>inline</code> 的元素</li><li>块盒: <code>display</code> 等于 <code>block</code> 的元素</li></ol><p>行盒在页面中不换行、块盒独占一行</p><p>display 默认值为 inline</p><p>浏览器默认样式表设置的块盒：容器元素、h1~h6、p</p><p>常见的行盒：span、a、img、video、audio</p><h2 id="盒子的组成部分" tabindex="-1">盒子的组成部分 <a class="header-anchor" href="#盒子的组成部分" aria-label="Permalink to &quot;盒子的组成部分&quot;">​</a></h2><p><img src="'+t+'" alt="image"></p><blockquote><p>无论是行盒、还是块盒, 都由下面几个部分组成, 从内到外分别是：</p></blockquote><ul><li>内容 content</li><li>填充(内边距) padding</li><li>边框 border</li><li>外边距 margin</li></ul><h2 id="box-sizing-的两种设置" tabindex="-1">box-sizing 的两种设置 <a class="header-anchor" href="#box-sizing-的两种设置" aria-label="Permalink to &quot;box-sizing 的两种设置&quot;">​</a></h2><blockquote><p>现在主流浏览器有两种盒模型</p></blockquote><ol><li><code>content-box</code>(默认)</li><li><code>border-box</code>(MDN 推荐) <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/box-sizing" target="_blank" rel="noreferrer">MDN box-sizing</a></li></ol><p>下面是他们的不同 <img src="'+l+'" alt="image"> 这边盒子的大小就是当前 <code>content</code> 的大小 <img src="'+c+'" alt="image"> 这边盒子的大小就是当前 <code>content</code> + <code>padding</code> + <code>border</code> 的大小</p>',16),d=[s];function n(p,b,_,h,m,g){return e(),a("div",null,d)}const f=o(r,[["render",n]]);export{x as __pageData,f as default};

{
  "compilerOptions": {
    // 指定编译目标，可以是 "es3", "es5", "es6", "es2015", "es2016", "es2017", "es2018", "es2019", "es2020", "esnext".此配置项的值为 "esnext"，表示编译目标是 ECMAScript 下一个版本.
    "target": "esnext",
    // 指定模块类型，可以是 "commonjs", "amd", "umd", "system", "es6", "es2015", "esnext".此配置项的值为 "esnext"，表示使用 ECMAScript 下一个版本的模块系统.
    "module": "esnext",
    // 指定 JSX 的处理方式，可以是 "preserve", "react", "react-native".此配置项的值为 "preserve"，表示保留 JSX 元素，不进行编译.
    "jsx": "preserve",
    // 指定是否允许编译 JavaScript 文件.此配置项的值为 true，表示允许编译 JavaScript 文件.
    "allowJs": true,
    // 指定是否启用严格模式.此配置项的值为 true，表示启用严格模式.
    "strict": true,
    // 指定模块解析策略，可以是 "node", "classic".此配置项的值为 "node"，表示使用 Node.js 的模块解析策略.
    "moduleResolution": "node",
    // 指定是否启用 ECMAScript 模块和 CommonJS 模块之间的互操作性.此配置项的值为 true，表示启用 ECMAScript 模块和 CommonJS 模块之间的互操作性.
    "esModuleInterop": true,
    // 指定是否跳过对库文件类型检查.此配置项的值为 true，表示跳过对库文件类型检查.
    "skipLibCheck": true,
    // 指定是否强制文件名使用一致的大小写.此配置项的值为 true，表示强制文件名使用一致的大小写.
    "forceConsistentCasingInFileNames": true,
    // 指定是否解析 JSON 模块.此配置项的值为 true，表示解析 JSON 模块.
    "resolveJsonModule": true,
    // 指定是否将每个文件视为一个单独的模块.此配置项的值为 true，表示将每个文件视为一个单独的模块.
    "isolatedModules": true,
    // 指定是否对未使用的方法进行报错.此配置项的值为 false，表示不对未使用的方法进行报错.
    "noUnusedLocals": false,
    // 检查函数的参数列表，对于未被使用的参数.此配置项的值为 false，不会对未使用的函数参数进行检查.
    "noUnusedParameters": false,
    // 指定是否生成输出文件.此配置项的值为 true，表示不生成输出文件.
    "noEmit": true,
    // 指定是否允许导入 TypeScript 文件.此配置项的值为 true，表示允许导入 TypeScript 文件.
    "allowImportingTsExtensions": true,
    "types": ["vite/client", "vitepress", "vue", "element-plus/global"],
    "paths": {
      "@/*": ["./src/*"],
      "docs/*": ["./docs/*"]
    },
    "lib": ["ESNext", "DOM", "DOM.Iterable"]
  },
  "include": [
    "docs/**/*.ts",
    "docs/**/*.tsx",
    "docs/**/*.vue",
    ".vitepress/**/*.ts",
    ".vitepress/**/*.mts"
  ],
  "exclude": ["**/node_modules/**", "**/dist/**"]
}
